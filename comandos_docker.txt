- Executar uma imagem, se a imagem não existe é efetuado download do github
docker run Hello World
docker run ubuntu
docker run dockersamples/static-site

- Containers que estão sendo executados no momento
docker ps

- Para ver todos containers, inclusive os paradosa
docker ps -a ou docker ps --all

- Quando executamos o container do Ubuntu, precisamos passar para ele um comando que rode dentro dele, por exemplo:
docker run ubuntu echo "Ola Mundo"

- terminal da  máquina seja integrado ao terminal de dentro do container
docker run -it ubuntu

- para não criar novamente um novo container, queremos executá-lo novamente
docker start 05025384675e
docker stop 05025384675e

- para interagir dentro do container no terminal
  a, de attach, para integrar os terminais, e -i, de interactive, para interagirmos com o terminal,
docker start -a -i 303d7d4cff82

- Para remover um container, executamos o comando docker rm, passando para ele o id do container a ser removido - remove unitario
docker rm c9f83bfb82a8

- Remover todos os containers parados
docker container prune

- Remover imagem
docker rmi hello-world

Impede o travamento da terminal
- docker run -d dockersamples/static-site

- Linkar porta interna do container a uma porta do nosso computador
docker run -d -P dockersamples/static-site

- Verifica a porta do docler 
docker port "ID"
 
- Veririca ip da maquina virtual
docker-machine ip

- Acessar o conteiner 
IP + porta = http://192.168.99.100:32769/

- Dar nome ao container
docker run -d -P --name meu-site dockersamples/static-site

- Definer porta ao container
docker run -d -p 12345:80 dockersamples/static-site

- Alterar o nome de uma variavel dentro do container
alterar de hello para douglas q
docker run -d -P -e AUTHOR="Douglas Q" dockersamples/static-site

- Parar todos os containers de uma vez
docker stop $(docker ps -q)

- Parar todos os containers sem esperar 10 segundos(default)
docker stop -t 0 $(docker ps -q)

Resumo:
	Comandos básicos do Docker para podermos baixar imagens e interagir com o container.
	Imagens do Docker possuem um sistema de arquivos em camadas (Layered File System) e os benefícios dessa abordagem principalmente para o download de novas imagens.
	Imagens são Read-Only sempre (apenas para leitura)
	Containers representam uma instância de uma imagem
	Como imagens são Read-Only os containers criam nova camada (layer) para guardar as alterações
	O comando Docker run e as possibilidades de execução de um container

Resumo comandos:
	docker ps - exibe todos os containers em execução no momento.
	docker ps -a - exibe todos os containers, independentemente de estarem em execução ou não.
	docker run -it NOME_DA_IMAGEM - conecta o terminal que estamos utilizando com o do container.
	docker start ID_CONTAINER - inicia o container com id em questão.
	docker stop ID_CONTAINER - interrompe o container com id em questão.
	docker start -a -i ID_CONTAINER - inicia o container com id em questão e integra os terminais, além de permitir interação entre ambos.
	docker rm ID_CONTAINER - remove o container com id em questão.
	docker container prune - remove todos os containers que estão parados.
	docker rmi NOME_DA_IMAGEM - remove a imagem passada como parâmetro.
	docker run -d -P --name NOME dockersamples/static-site - ao executar, dá um nome ao container.
	docker run -d -p 12345:80 dockersamples/static-site - define uma porta específica para ser atribuída à porta 80 do container, neste caso 12345.
	docker run -d -e AUTHOR="Fulano" dockersamples/static-site - define uma variável de ambiente AUTHOR com o valor Fulano no container criado.
	
- Restart maquina virtual
docker-machine restart.

- criar um volume no windows onde Container é o nome do nome da variavel no toll box
docker run -it --name=teste --rm -v //Desktop:/var/www/ ubuntu
acessar arquivo e escrever 
root@abd0286c0083:/# cd /var/www/
root@abd0286c0083:/var/www# touch novo-arquivo.txt
root@abd0286c0083:/var/www# echo "Este arquivo foi criado dentro de um volume" > novo-arquivo.txt

- rodar um código em Node.js
docker run node - baixa a imagem do node

- criar um volume, que faça referência à pasta do código no nosso Desktop 
(salvo em C:\Users\amato\OneDrive\Área de Trabalho\volume-exemplo)
Desktop = variavel declarada no tool box - pastas compartilhadas
volume-exemplo = pasta salva dentro do caminho de Desktop 
docker run -v //trabalho/volume-exemplo:/var/www/ node

-w "/var/www" especifica que o comando tem q ser executado dentro da pasta /var/www
docker run -p 8080:3000 -v //trabalho/volume-exemplo:/var/www/ -w "/var/www" node npm start

Resumo:
docker run -v "CAMINHO_VOLUME" NOME_DA_IMAGEM - cria um volume no respectivo caminho do container.
docker inspect ID_CONTAINER - retorna diversas informações sobre o container.

- Build do docker
docker build -f Dockerfile -t amatos497/node .

- login
dockerhub: amatos497

- subir no docker
docker push amatos497/node

Resumo de comandos para build e push;
	docker build -f Dockerfile - cria uma imagem a partir de um Dockerfile.
	docker build -f CAMINHO_DOCKERFILE/Dockerfile -t NOME_USUARIO/NOME_IMAGEM - constrói e nomeia uma imagem não-oficial informando o caminho para o Dockerfile.
	docker login - inicia o processo de login no Docker Hub.
	docker push NOME_USUARIO/NOME_IMAGEM - envia a imagem criada para o Docker Hub.
	docker pull NOME_USUARIO/NOME_IMAGEM - baixa a imagem desejada do Docker Hub.
	
Comandos relacionados às informações
	docker version - exibe a versão do docker que está instalada.
	docker inspect ID_CONTAINER - retorna diversas informações sobre o container.
	docker ps - exibe todos os containers em execução no momento.
	docker ps -a - exibe todos os containers, independentemente de estarem em execução ou não.
Comandos relacionados à execução
	docker run NOME_DA_IMAGEM - cria um container com a respectiva imagem passada como parâmetro.
	docker run -it NOME_DA_IMAGEM - conecta o terminal que estamos utilizando com o do container.
	docker run -d -P --name NOME dockersamples/static-site - ao executar, dá um nome ao container.
	docker run -d -p 12345:80 dockersamples/static-site - define uma porta específica para ser atribuída à porta 80 do container, neste caso 12345.
	docker run -v "CAMINHO_VOLUME" NOME_DA_IMAGEM - cria um volume no respectivo caminho do container.
	docker run -it --name NOME_CONTAINER --network NOME_DA_REDE NOME_IMAGEM - cria um container especificando seu nome e qual rede deverá ser usada.
Comandos relacionados à inicialização/interrupção
	docker start ID_CONTAINER - inicia o container com id em questão.
	docker start -a -i ID_CONTAINER - inicia o container com id em questão e integra os terminais, além de permitir interação entre ambos.
	docker stop ID_CONTAINER - interrompe o container com id em questão.
Comandos relacionados à remoção
	docker rm ID_CONTAINER - remove o container com id em questão.
	docker container prune - remove todos os containers que estão parados.
	docker rmi NOME_DA_IMAGEM - remove a imagem passada como parâmetro.
Comandos relacionados à construção de Dockerfile
	docker build -f Dockerfile - cria uma imagem a partir de um Dockerfile.
	docker build -f Dockerfile -t NOME_USUARIO/NOME_IMAGEM - constrói e nomeia uma imagem não-oficial.
	docker build -f Dockerfile -t NOME_USUARIO/NOME_IMAGEM CAMINHO_DOCKERFILE - constrói e nomeia uma imagem não-oficial informando o caminho para o Dockerfile.
Comandos relacionados ao Docker Hub
	docker login - inicia o processo de login no Docker Hub.
	docker push NOME_USUARIO/NOME_IMAGEM - envia a imagem criada para o Docker Hub.
	docker pull NOME_USUARIO/NOME_IMAGEM - baixa a imagem desejada do Docker Hub.
Comandos relacionados à rede
	hostname -i - mostra o ip atribuído ao container pelo docker (funciona apenas dentro do container).
	docker network create --driver bridge NOME_DA_REDE - cria uma rede especificando o driver desejado.
	
Segue também uma breve lista dos novos comandos utilizados:
	docker-compose up - sobe os serviços criados
	docker-compose down - para os serviços criados.
	docker-compose ps - lista os serviços que estão rodando.
	docker exec -it alura-books-1 ping node2- executa o comando ping node2 dentro do container alura-books-1
	
